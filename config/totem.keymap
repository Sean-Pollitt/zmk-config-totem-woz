//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    tapping-term-ms = <250>;
};

&lt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
    tapping-term-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        copy: copy {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp LG(C)>;
        };
        paste: paste {
            compatible = "zmk,behavior-tap-dance";
            label = "PASTE";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LG(V)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
        &kp Q         &kp W       &kp E           &kp R          &kp T             &kp Y      &kp U            &kp I        &kp O       &kp P
        &mt LSHIFT A  &mt LALT S  &mt LCTRL D     &mt LGUI F     &kp G             &kp H      &mt RGUI J       &mt RCTRL K  &mt RALT L  &mt RSHIFT SEMI
&trans  &kp Z         &kp X       &copy           &paste         &kp B             &kp N      &kp M            &kp COMMA    &kp DOT     &kp FSLH         &mo 3
                                  &mt LSHIFT ESC  &mt LCTRL TAB  &mt LGUI SPACE    &kp ENTER  &lt 1 BACKSPACE  &lt 2 DEL
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
        &trans    &kp AT    &kp HASH  &kp DLLR  &kp PRCNT        &kp CARET  &kp AMPS   &kp STAR   &kp PLUS   &kp DOUBLE_QUOTES
        &kp EXCL  &kp LBRC  &kp LBKT  &kp LPAR  &kp PIPE         &kp TILDE  &kp MINUS  &kp UNDER  &kp EQUAL  &kp SINGLE_QUOTE
&trans  &trans    &kp RBRC  &kp RBKT  &kp RPAR  &kp BACKSLASH    &trans     &trans     &trans     &kp EXCL   &kp GRAVE          &trans
                            &trans    &trans    &trans           &trans     &trans     &trans
            >;
        };

        nav_layer {
            bindings = <
        &trans  &kp N7  &kp N8  &kp N9  &trans    &kp HOME  &kp PG_UP  &trans  &trans     &trans
        &kp N0  &kp N4  &kp N5  &kp N6  &trans    &kp LEFT  &kp DOWN   &kp UP  &kp RIGHT  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans    &kp END   &kp PG_DN  &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans     &trans
            >;
        };

        media_layer {
            bindings = <
        &trans  &trans  &trans        &trans        &trans        &trans            &trans             &trans           &trans  &trans
        &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &trans            &trans             &trans           &trans  &trans
&trans  &trans  &trans  &trans        &trans        &trans        &trans            &trans             &trans           &trans  &trans  &trans
                        &trans        &trans        &trans        &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
            >;

            label = "media";
        };
    };
};
